# we merge the FID variable to our main shapefile
col <- merge(col, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
# municipal-level data for distance to capital city
IR18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/0-1_Rurality/PANEL_CARACTERISTICAS_GENERALES(2021).xlsx")
colnames(IR18)[3] = "MPIO_CDPMP"
colnames(IR18)[7] = "Year"
IR18 <- IR18 %>%
filter(Year == 2018)
# this data set also contains important descriptive information (department, province) that we will hang onto
IR18 <- IR18[c("MPIO_CDPMP", "depto", "provincia", "indrural")]
# Because the import creates a numeric field for DANE code, we must convert this numeric variable to character and then assure each observation has the corresponding 5 digits
IR18$MPIO_CDPMP <- as.character(IR18$MPIO_CDPMP)
# Add a 0 before values with 4 digits only
IR18$MPIO_CDPMP <- ifelse(nchar(IR18$MPIO_CDPMP) == 4, paste0("0", IR18$MPIO_CDPMP), IR18$MPIO_CDPMP)
# "less free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnl_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnlfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnlfc_1,
TRUE ~ NA_real_
))
# "more free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnmr_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnmrfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnmrfc_1,
TRUE ~ NA_real_
))
# "stronger civil liberties"
IR18 <- IR18 %>%
mutate(clrgst_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgstch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgstch_1,
TRUE ~ NA_real_
))
# "weaker civil liberties"
IR18 <- IR18 %>%
mutate(clrgwk_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgwkch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgwkch_1,
TRUE ~ NA_real_
))
# For sf (R), merge this data to shapefile
col <- merge(col, IR18, by = "MPIO_CDPMP", all.x = TRUE)
# merge base-layer dataset to obtain FID variable
IR18 <- merge(IR18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
IR18 <- IR18 %>%
rename(indrur0t1) %>%
rename(FID_0t1 = FID)
IR18 <- IR18 %>%
rename(indrur0t1 = indrural) %>%
rename(FID_0t1 = FID)
# For ArcMaps, export the final merge to a .csv file
write.csv(IR18, file = "G:/My Drive/git/snvdem24/data/geospatial/2018pmq/0-1_Rurality/IR18_0-1.csv", row.names = FALSE)
#clean things up for next variable
df2rm = c("IR18", "df2rm")
rm(list = df2rm)
usethis::create_github_token()
gitcreds::gitcreds_set()
knitr::opts_chunk$set(echo = TRUE)
setwd("G:/My Drive/git/snvdem24")
# make a clean slate
rm(list = ls())
# load needed packages
library(tidyverse)
library(vdemdata)
# Create a data frame of version 13 dataset:
v13 <- vdem
# this df appears to be the same as MC's "full + others" data set: read_dta("C:/Users/mcoppedg/Dropbox/MC/VDemFiles/Archive/V13/V-Dem-CY-Full+Others/V-Dem-CY-Full+Others-v13.dta")
# Filter to just Colombia since 1899:
v13_col <- filter(v13, country_name=="Colombia" & year > 1899)
# Select just the ID and subnational variables
# (Note: v2elsnless and v2elsnmore are not in this df. We will make sure to
# include them in our request to the data manager.)
v13_col_sn <- v13_col %>%
select(country_id, country_name, country_text_id, historical_date, year,
v2elsnlfc_0:v2elsnlfc_21, v2elsnmrfc_0:v2elsnmrfc_21,
v2clrgstch_0:v2clrgstch_21, v2clrgwkch_0:v2clrgwkch_21)
# Listing the variable names to check our work:
#names(v13_col_sn)
# Export the result to a CSV file:
#write.csv(v13_col_sn, file = "v13_col_sn.csv")
# create subset of V-Dem data for 2018
v13_col_sn_2018 <- subset(v13_col_sn, year == 2018)
v13_col_sn_2018 <- v13_col_sn_2018 %>%
select(-matches("_17$|_18$|_19$|_20$|_21$")) # remove responses not relevant for Colombia
df2rm = c("v13", "v13_col", "v13_col_sn", "df2rm")
rm(list = df2rm)
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
# municipal-level data for distance to capital city
IR18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/0-1_Rurality/PANEL_CARACTERISTICAS_GENERALES(2021).xlsx")
library(readxl)
library(sf)
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
col <- col %>%
select(1:8)
library(readxl)
MGN18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
# we merge the FID variable to our main shapefile
col <- merge(col, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
# municipal-level data for distance to capital city
IR18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/0-1_Rurality/PANEL_CARACTERISTICAS_GENERALES(2021).xlsx")
colnames(IR18)[3] = "MPIO_CDPMP"
colnames(IR18)[7] = "Year"
IR18 <- IR18 %>%
filter(Year == 2018)
# this data set also contains important descriptive information (department, province) that we will hang onto
IR18 <- IR18[c("MPIO_CDPMP", "depto", "provincia", "indrural")]
# Because the import creates a numeric field for DANE code, we must convert this numeric variable to character and then assure each observation has the corresponding 5 digits
IR18$MPIO_CDPMP <- as.character(IR18$MPIO_CDPMP)
# Add a 0 before values with 4 digits only
IR18$MPIO_CDPMP <- ifelse(nchar(IR18$MPIO_CDPMP) == 4, paste0("0", IR18$MPIO_CDPMP), IR18$MPIO_CDPMP)
# "less free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnl_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnlfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnlfc_1,
TRUE ~ NA_real_
))
# "more free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnmr_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnmrfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnmrfc_1,
TRUE ~ NA_real_
))
# "stronger civil liberties"
IR18 <- IR18 %>%
mutate(clrgst_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgstch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgstch_1,
TRUE ~ NA_real_
))
# "weaker civil liberties"
IR18 <- IR18 %>%
mutate(clrgwk_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgwkch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgwkch_1,
TRUE ~ NA_real_
))
IR18 <- IR18 %>%
mutate(Rural0t1 = case_when(
indrural > 0.50 == "Rural",
IR18 <- IR18 %>%
mutate(Rural0t1 = case_when(
indrural > 0.50 = "Rural",
IR18 <- IR18 %>%
mutate(Rural0t1 = case_when(
indrural > 0.50 ~ "Rural",
indrural < 0.50 ~ "Urban",
TRUE ~ NA_real_
))
IR18 <- IR18 %>%
mutate(Rural0t1 = case_when(
indrural > 0.50 ~ "Rural",
indrural < 0.50 ~ "Urban",
TRUE ~ NA_character_
))
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*elsnl_0t1)+((1-indrural)*(1-elsnl_0t1))) %>%
mutate(em_0t1x = (indrural*elsnmr_0t1)+((1-indrural)*(1-elsnmr_0t1))) %>%
mutate(cs_0t1x = (indrural*clrgst_0t1)+((1-indrural)*(1-clrgst_0t1))) %>%
mutate(cw_0t1x = (indrural*clrgwk_0t1)+((1-indrural)*(1-clrgwk_0t1)))
View(IR18)
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*(1-elsnl_0t1))+((1-indrural)*elsnl_0t1)) %>%
mutate(em_0t1x = (indrural*(1-elsnmr_0t1))+((1-indrural)*elsnmr_0t1)) %>%
mutate(cs_0t1x = (indrural*(1-clrgst_0t1))+((1-indrural)*clrgst_0t1)) %>%
mutate(cw_0t1x = (indrural*(1-clrgwk_0t1))+((1-indrural)*clrgwk_0t1))
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*elsnl_0t1))+((1-indrural)*(1-elsnl_0t1))
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*elsnl_0t1)+((1-indrural)*(1-elsnl_0t1))) %>%
mutate(em_0t1x = (indrural*elsnmr_0t1)+((1-indrural)*(1-elsnmr_0t1))) %>%
mutate(cs_0t1x = (indrural*clrgst_0t1)+((1-indrural)*(1-clrgst_0t1))) %>%
mutate(cw_0t1x = (indrural*clrgwk_0t1)+((1-indrural)*(1-clrgwk_0t1)))
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*v13_col_sn_2018$v2elsnlfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnlfc_1)) %>%
mutate(em_0t1x = (indrural*elsnmr_0t1)+((1-indrural)*(1-elsnmr_0t1))) %>%
mutate(cs_0t1x = (indrural*clrgst_0t1)+((1-indrural)*(1-clrgst_0t1))) %>%
mutate(cw_0t1x = (indrural*clrgwk_0t1)+((1-indrural)*(1-clrgwk_0t1)))
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*v13_col_sn_2018$v2elsnlfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnlfc_1)) %>%
mutate(em_0t1x = (indrural*v13_col_sn_2018$v2elsnmrfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnmrfc_1)) %>%
mutate(cs_0t1x = (indrural*v13_col_sn_2018$v2clrgstch_0)+((1-indrural)*v13_col_sn_2018$v2clrgstch_1)) %>%
mutate(cw_0t1x = (indrural*v13_col_sn_2018$v2clrgwkch_0)+((1-indrural)*v13_col_sn_2018$v2clrgwkch_1)) %>%
```
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*v13_col_sn_2018$v2elsnlfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnlfc_1)) %>%
mutate(em_0t1x = (indrural*v13_col_sn_2018$v2elsnmrfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnmrfc_1)) %>%
mutate(cs_0t1x = (indrural*v13_col_sn_2018$v2clrgstch_0)+((1-indrural)*v13_col_sn_2018$v2clrgstch_1)) %>%
mutate(cw_0t1x = (indrural*v13_col_sn_2018$v2clrgwkch_0)+((1-indrural)*v13_col_sn_2018$v2clrgwkch_1))
knitr::opts_chunk$set(echo = TRUE)
setwd("G:/My Drive/git/snvdem24")
# make a clean slate
rm(list = ls())
# load needed packages
library(tidyverse)
library(vdemdata)
# Create a data frame of version 13 dataset:
v13 <- vdem
# this df appears to be the same as MC's "full + others" data set: read_dta("C:/Users/mcoppedg/Dropbox/MC/VDemFiles/Archive/V13/V-Dem-CY-Full+Others/V-Dem-CY-Full+Others-v13.dta")
# Filter to just Colombia since 1899:
v13_col <- filter(v13, country_name=="Colombia" & year > 1899)
# Select just the ID and subnational variables
# (Note: v2elsnless and v2elsnmore are not in this df. We will make sure to
# include them in our request to the data manager.)
v13_col_sn <- v13_col %>%
select(country_id, country_name, country_text_id, historical_date, year,
v2elsnlfc_0:v2elsnlfc_21, v2elsnmrfc_0:v2elsnmrfc_21,
v2clrgstch_0:v2clrgstch_21, v2clrgwkch_0:v2clrgwkch_21)
# Listing the variable names to check our work:
#names(v13_col_sn)
# Export the result to a CSV file:
#write.csv(v13_col_sn, file = "v13_col_sn.csv")
# create subset of V-Dem data for 2018
v13_col_sn_2018 <- subset(v13_col_sn, year == 2018)
v13_col_sn_2018 <- v13_col_sn_2018 %>%
select(-matches("_17$|_18$|_19$|_20$|_21$")) # remove responses not relevant for Colombia
df2rm = c("v13", "v13_col", "v13_col_sn", "df2rm")
rm(list = df2rm)
library(sf)
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
col <- col %>%
select(1:8)
library(readxl)
MGN18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
# we merge the FID variable to our main shapefile
col <- merge(col, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
# municipal-level data for distance to capital city
IR18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/0-1_Rurality/PANEL_CARACTERISTICAS_GENERALES(2021).xlsx")
colnames(IR18)[3] = "MPIO_CDPMP"
colnames(IR18)[7] = "Year"
IR18 <- IR18 %>%
filter(Year == 2018)
# this data set also contains important descriptive information (department, province) that we will hang onto
IR18 <- IR18[c("MPIO_CDPMP", "depto", "provincia", "indrural")]
# Because the import creates a numeric field for DANE code, we must convert this numeric variable to character and then assure each observation has the corresponding 5 digits
IR18$MPIO_CDPMP <- as.character(IR18$MPIO_CDPMP)
# Add a 0 before values with 4 digits only
IR18$MPIO_CDPMP <- ifelse(nchar(IR18$MPIO_CDPMP) == 4, paste0("0", IR18$MPIO_CDPMP), IR18$MPIO_CDPMP)
# Option #1: interact V-Dem with rural index score
#For example, a high rural index multiplied by a high proportion of V-Dem's response will produce correspondingly high scores. This may occur with the values for less free and fair elections for rural (.875) vs. urban (.125) areas.
# ([indrur0t1]*Rural)+((1-[indrur0t1])*Urban)
# .80*.875 + .20*.125
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*v13_col_sn_2018$v2elsnlfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnlfc_1)) %>%
mutate(em_0t1x = (indrural*v13_col_sn_2018$v2elsnmrfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnmrfc_1)) %>%
mutate(cs_0t1x = (indrural*v13_col_sn_2018$v2clrgstch_0)+((1-indrural)*v13_col_sn_2018$v2clrgstch_1)) %>%
mutate(cw_0t1x = (indrural*v13_col_sn_2018$v2clrgwkch_0)+((1-indrural)*v13_col_sn_2018$v2clrgwkch_1))
# Option #2: we dichotomize the rurality score and assign the corresponding V-Dem score
# "less free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnl_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnlfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnlfc_1,
TRUE ~ NA_real_
))
# "more free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnmr_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnmrfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnmrfc_1,
TRUE ~ NA_real_
))
# "stronger civil liberties"
IR18 <- IR18 %>%
mutate(clrgst_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgstch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgstch_1,
TRUE ~ NA_real_
))
# "weaker civil liberties"
IR18 <- IR18 %>%
mutate(clrgwk_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgwkch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgwkch_1,
TRUE ~ NA_real_
))
# For sf (R), merge this data to shapefile
col <- merge(col, IR18, by = "MPIO_CDPMP", all.x = TRUE)
# merge base-layer dataset to obtain FID variable
IR18 <- merge(IR18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
IR18 <- IR18 %>%
rename(indrur0t1 = indrural) %>%
rename(FID_0t1 = FID)
# For ArcMaps, export the final merge to a .csv file
write.csv(IR18, file = "G:/My Drive/git/snvdem24/data/geospatial/2018pmq/0-1_Rurality/IR18_0-1.csv", row.names = FALSE)
#clean things up for next variable
df2rm = c("IR18", "df2rm")
rm(list = df2rm)
knitr::opts_chunk$set(echo = TRUE)
setwd("G:/My Drive/git/snvdem24")
# make a clean slate
rm(list = ls())
# load needed packages
library(tidyverse)
library(vdemdata)
# Create a data frame of version 13 dataset:
v13 <- vdem
# this df appears to be the same as MC's "full + others" data set: read_dta("C:/Users/mcoppedg/Dropbox/MC/VDemFiles/Archive/V13/V-Dem-CY-Full+Others/V-Dem-CY-Full+Others-v13.dta")
# Filter to just Colombia since 1899:
v13_col <- filter(v13, country_name=="Colombia" & year > 1899)
# Select just the ID and subnational variables
# (Note: v2elsnless and v2elsnmore are not in this df. We will make sure to
# include them in our request to the data manager.)
v13_col_sn <- v13_col %>%
select(country_id, country_name, country_text_id, historical_date, year,
v2elsnlfc_0:v2elsnlfc_21, v2elsnmrfc_0:v2elsnmrfc_21,
v2clrgstch_0:v2clrgstch_21, v2clrgwkch_0:v2clrgwkch_21)
# Listing the variable names to check our work:
#names(v13_col_sn)
# Export the result to a CSV file:
#write.csv(v13_col_sn, file = "v13_col_sn.csv")
# create subset of V-Dem data for 2018
v13_col_sn_2018 <- subset(v13_col_sn, year == 2018)
v13_col_sn_2018 <- v13_col_sn_2018 %>%
select(-matches("_17$|_18$|_19$|_20$|_21$")) # remove responses not relevant for Colombia
df2rm = c("v13", "v13_col", "v13_col_sn", "df2rm")
rm(list = df2rm)
library(sf)
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
col <- col %>%
select(1:8)
library(readxl)
MGN18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
# we merge the FID variable to our main shapefile
col <- merge(col, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
# municipal-level data for distance to capital city
IR18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/0-1_Rurality/PANEL_CARACTERISTICAS_GENERALES(2021).xlsx")
colnames(IR18)[3] = "MPIO_CDPMP"
colnames(IR18)[7] = "Year"
IR18 <- IR18 %>%
filter(Year == 2018)
# this data set also contains important descriptive information (department, province) that we will hang onto
IR18 <- IR18[c("MPIO_CDPMP", "depto", "provincia", "indrural")]
# Because the import creates a numeric field for DANE code, we must convert this numeric variable to character and then assure each observation has the corresponding 5 digits
IR18$MPIO_CDPMP <- as.character(IR18$MPIO_CDPMP)
# Add a 0 before values with 4 digits only
IR18$MPIO_CDPMP <- ifelse(nchar(IR18$MPIO_CDPMP) == 4, paste0("0", IR18$MPIO_CDPMP), IR18$MPIO_CDPMP)
# Option #1: interact V-Dem with rural index score
#For example, a high rural index multiplied by a high proportion of V-Dem's response will produce correspondingly high scores. This may occur with the values for less free and fair elections for rural (.875) vs. urban (.125) areas.
# ([indrur0t1]*Rural)+((1-[indrur0t1])*Urban)
# .80*.875 + .20*.125
IR18 <- IR18 %>%
mutate(el_0t1x = (indrural*v13_col_sn_2018$v2elsnlfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnlfc_1)) %>%
mutate(em_0t1x = (indrural*v13_col_sn_2018$v2elsnmrfc_0)+((1-indrural)*v13_col_sn_2018$v2elsnmrfc_1)) %>%
mutate(cs_0t1x = (indrural*v13_col_sn_2018$v2clrgstch_0)+((1-indrural)*v13_col_sn_2018$v2clrgstch_1)) %>%
mutate(cw_0t1x = (indrural*v13_col_sn_2018$v2clrgwkch_0)+((1-indrural)*v13_col_sn_2018$v2clrgwkch_1))
# Option #2: we dichotomize the rurality score and assign the corresponding V-Dem score
# "less free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnl_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnlfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnlfc_1,
TRUE ~ NA_real_
))
# "more free and fair subnational elections"
IR18 <- IR18 %>%
mutate(elsnmr_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnmrfc_0,
indrural < 0.50 ~ v13_col_sn_2018$v2elsnmrfc_1,
TRUE ~ NA_real_
))
# "stronger civil liberties"
IR18 <- IR18 %>%
mutate(clrgst_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgstch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgstch_1,
TRUE ~ NA_real_
))
# "weaker civil liberties"
IR18 <- IR18 %>%
mutate(clrgwk_0t1 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgwkch_0,
indrural < 0.50 ~ v13_col_sn_2018$v2clrgwkch_1,
TRUE ~ NA_real_
))
df2rm = c("IR18", "df2rm")
rm(list = df2rm)
# municipal-level data for "value added"
VAM18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anexo-2020-2021-provisional-valor-agregado-municipio-2011-2021.xlsx", sheet = "Cuadro 9", range = "A11:I1133")
# rename columns to facilitate merging shapefile
VAM18 <- VAM18 %>%
rename(MPIO_CDPMP = `Código Municipio`) %>%
rename(DPTO_CCDGO = `Código Departamento`) %>%
rename(VAM18_2t3 = `Valor agregado\r\n`) %>%
select(1|3|8)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
ED18 <- merge(VAM18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
ED18 <- ED18 %>%
rename(FID_2t3 = FID)
# department-level data for "PBI per capita"
PBID <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anex-PIBDep-RetropolacionDepartamento-2022pr.xlsx", sheet = "Cuadro 1", range = "A10:AS36")
PBID <- PBID %>%
rename(DPTO_CCDGO = `Código Departamento (DIVIPOLA)`) %>%
select(DPTO_CCDGO, `2018`) %>% #keep only 2018 data
rename(PBID18_2t3 = `2018`)
ED18 <- merge(ED18, PBID, by = "DPTO_CCDGO", all.x = TRUE)
#municipal estimates
ED18 <- ED18 %>%
mutate(el_2t3xm = (VAM18_2t3*v13_col_sn_2018$v2elsnlfc_2)+((1-VAM18_2t3)*v13_col_sn_2018$v2elsnlfc_3)) %>%
mutate(em_2t3xm = (VAM18_2t3*v13_col_sn_2018$v2elsnmrfc_2)+((1-VAM18_2t3)*v13_col_sn_2018$v2elsnmrfc_3)) %>%
mutate(cs_2t3xm = (VAM18_2t3*v13_col_sn_2018$v2clrgstch_2)+((1-VAM18_2t3)*v13_col_sn_2018$v2clrgstch_3)) %>%
mutate(cw_2t3xm = (VAM18_2t3*v13_col_sn_2018$v2clrgwkch_2)+((1-VAM18_2t3)*v13_col_sn_2018$v2clrgwkch_3))
# Import voting data from Registraduria (RNEC).
library(readr)
rp18 <- read_csv("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/15-16_RulingParty/2018_presidencia_segunda_vuelta_dta_c27d4515ed.csv") # this long dataset contains only 2 candidates because it was a second-round election. other datasets will include more rows depending on the number of candidates running.
#Codigo municipio should have 5 digits
rp18$MPIO_CDPMP <- as.character(rp18$codmpio)
rp18$MPIO_CDPMP <- ifelse(nchar(rp18$MPIO_CDPMP) == 4, sprintf("0%s", rp18$MPIO_CDPMP), rp18$MPIO_CDPMP)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
rp18 <- merge(rp18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
library(dplyr)
# Step 1: Calculate total votes cast at municipal level (allows for percentages later on).
rp18 <- rp18 %>%
group_by(FID) %>%
mutate(votototal = sum(votos)) %>%
mutate(vtpc = votos/votototal) %>% #optional: useful for quick look at percentages, SD, etc.
mutate(vtpc0 = round(vtpc*100, 2))
# For mapping at the municipal level, values may take the form of: percent difference in votes between top winner and runner-up candidate(s). This requires a few steps:
#Step 2: Pivot municipal voting behavior into wide format.
p18d0 <- rp18 %>%
group_by(FID, codigo_lista) %>%
pivot_wider(names_from = codigo_lista, values_from = votos) %>% # Pivot to wide format
rename(Petro = `1`,
Duque = `2`,
nomark = `997`,
null = `998`,
blank = `999`)
## Step 3: Create new dfs for voting behavior at municipal level -- is there a more efficient code?
p18d2 <- p18d0 %>%
select(FID, Petro) %>%
filter(!is.na(Petro))
p18d2 <- p18d2[!duplicated(p18d2$FID), ]
p18d3 <- p18d0 %>%
select(FID, Duque) %>%
filter(!is.na(Duque))
p18d3 <- p18d3[!duplicated(p18d3$FID), ]
p18d4 <- p18d0 %>%
select(FID, nomark) %>%
filter(!is.na(nomark))
p18d4 <- p18d4[!duplicated(p18d4$FID), ]
p18d5 <- p18d0 %>%
select(FID, null) %>%
filter(!is.na(null))
p18d5 <- p18d5[!duplicated(p18d5$FID), ]
p18d6 <- p18d0 %>%
select(FID, blank) %>%
filter(!is.na(blank))
p18d6 <- p18d6[!duplicated(p18d6$FID), ]
p18d7 <- p18d0 %>%
group_by(FID) %>%
summarise(vtotal = first(votototal))
p18d7 <- p18d7[!duplicated(p18d7$FID), ]
RPs <- list(p18d2, p18d3, p18d4, p18d5, p18d6, p18d7)
merged_RP <- Reduce(function(x, y) merge(x, y, by = "FID", all = TRUE), RPs)
df2rm2 = c("rp18", "p18d0", "p18d2", "p18d3", "p18d4", "p18d5", "p18d6", "p18d7", "df2rm2", "RPs")
rm(list = df2rm2)
## Step 3: Create margin of support variable for winner and runner-up candidates. Positive value indicates support for winner; negative indicates opposition. Variable order may vary depending on the election year data from RNEC
RP_15 <- merged_RP %>%
mutate(MOV_top2 = Duque-Petro) %>% #Raw vote-count margin of victory
mutate(Duque_pct = Duque/vtotal) %>%
mutate(Petro_pct = Petro/vtotal) %>%
mutate(MOV_pct = Duque_pct-Petro_pct) #Standardized percent margin of victory
RP_15 <- RP_15 %>%
#"less free and fair subnational elections"
mutate(elsnl_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2elsnlfc_15, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2elsnmrfc_15, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2clrgstch_15, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2clrgwkch_15, TRUE ~ NA_real_))
#Q16: in "areas where support [10% MOV] for the national ruling party is weak" there are ...
RP_15 <- RP_15 %>%
#"less free and fair subnational elections"
mutate(elsnl_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2elsnlfc_16, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2elsnmrfc_16, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2clrgstch_16, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2clrgwkch_16, TRUE ~ NA_real_))
RP_15 <- RP_15[complete.cases(RP_15$FID), ] # remove NA case
#municipal estimates:
RP_15 <- RP_15 %>%
mutate(el_15t16x = (Duque_pct*v13_col_sn_2018$v2elsnlfc_15)+((1-Duque_pct)*v13_col_sn_2018$v2elsnlfc_16)) %>%
mutate(em_15t16x = (Duque_pct*v13_col_sn_2018$v2elsnmrfc_15)+((1-Duque_pct)*v13_col_sn_2018$v2elsnmrfc_16)) %>%
mutate(cs_15t16x = (Duque_pct*v13_col_sn_2018$v2clrgstch_15)+((1-Duque_pct)*v13_col_sn_2018$v2clrgstch_16)) %>%
mutate(cw_15t16x = (Duque_pct*v13_col_sn_2018$v2clrgwkch_15)+((1-Duque_pct)*v13_col_sn_2018$v2clrgwkch_16))
View(RP_15)
