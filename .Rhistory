#"weaker civil liberties"
mutate(v2clrgwkch_16 = case_when(
MOV_top2_pct < -0.10 ~ v13_col_sn_2018$v2clrgwkch_16, TRUE ~ NA_real_))
RP_15 <- RP_15[complete.cases(RP_15$FID), ] # remove NA case
rm(RP_15)
library(dplyr)
# Step 1: Calculate total votes cast at municipal level (allows for percentages later on).
rp18 <- rp18 %>%
group_by(FID) %>%
mutate(votototal = sum(votos)) %>%
mutate(vtpc = votos/votototal) %>% #optional: useful for quick look at percentages, SD, etc.
mutate(vtpc0 = round(vtpc*100, 2))
# Import voting data from Registraduria (RNEC).
library(readr)
rp18 <- read_csv("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/15-16_RulingParty/2018_presidencia_segunda_vuelta_dta_c27d4515ed.csv") # this long dataset contains only 2 candidates because it was a second-round election. other datasets will include more rows depending on the number of candidates running.
#Codigo municipio should have 5 digits
rp18$MPIO_CDPMP <- as.character(rp18$codmpio)
rp18$MPIO_CDPMP <- ifelse(nchar(rp18$MPIO_CDPMP) == 4, sprintf("0%s", rp18$MPIO_CDPMP), rp18$MPIO_CDPMP)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
rp18 <- merge(rp18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
library(dplyr)
# Step 1: Calculate total votes cast at municipal level (allows for percentages later on).
rp18 <- rp18 %>%
group_by(FID) %>%
mutate(votototal = sum(votos)) %>%
mutate(vtpc = votos/votototal) %>% #optional: useful for quick look at percentages, SD, etc.
mutate(vtpc0 = round(vtpc*100, 2))
# For mapping at the municipal level, values may take the form of: percent difference in votes between top winner and runner-up candidate(s). This requires a few steps:
#Step 2: Pivot municipal voting behavior into wide format.
p18d0 <- rp18 %>%
group_by(FID, codigo_lista) %>%
pivot_wider(names_from = codigo_lista, values_from = votos) %>% # Pivot to wide format
rename(Petro = `1`,
Duque = `2`,
nomark = `997`,
null = `998`,
blank = `999`)
## Step 3: Create new dfs for voting behavior at municipal level -- is there a more efficient code?
p18d2 <- p18d0 %>%
select(FID, Petro) %>%
filter(!is.na(Petro))
p18d2 <- p18d2[!duplicated(p18d2$FID), ]
p18d3 <- p18d0 %>%
select(FID, Duque) %>%
filter(!is.na(Duque))
p18d3 <- p18d3[!duplicated(p18d3$FID), ]
p18d4 <- p18d0 %>%
select(FID, nomark) %>%
filter(!is.na(nomark))
p18d4 <- p18d4[!duplicated(p18d4$FID), ]
p18d5 <- p18d0 %>%
select(FID, null) %>%
filter(!is.na(null))
p18d5 <- p18d5[!duplicated(p18d5$FID), ]
p18d6 <- p18d0 %>%
select(FID, blank) %>%
filter(!is.na(blank))
p18d6 <- p18d6[!duplicated(p18d6$FID), ]
p18d7 <- p18d0 %>%
group_by(FID) %>%
summarise(vtotal = first(votototal))
p18d7 <- p18d7[!duplicated(p18d7$FID), ]
RPs <- list(p18d2, p18d3, p18d4, p18d5, p18d6, p18d7)
merged_RP <- Reduce(function(x, y) merge(x, y, by = "FID", all = TRUE), RPs)
df2rm2 = c("rp18", "p18d0", "p18d2", "p18d3", "p18d4", "p18d5", "p18d6", "p18d7", "df2rm2", "RPs")
rm(list = df2rm2)
## Step 3: Create margin of support variable for winner and runner-up candidates. Positive value indicates support for winner; negative indicates opposition. Variable order may vary depending on the election year data from RNEC
RP_15 <- merged_RP %>%
mutate(MOV_top2 = Duque-Petro) %>% #Raw vote-count margin of victory
mutate(Duque_pct = Duque/vtotal) %>%
mutate(Petro_pct = Petro/vtotal) %>%
mutate(MOV_pct = Duque_pct-Petro_pct) #Standardized percent margin of victory
#Q15: in "areas where support [10% MOV] for the national ruling party is strong" there are ...
RP_15 <- RP_15 %>%
#"less free and fair subnational elections"
mutate(elsnlf_15 = case_when(
MOV_top2_pct > 0.10 ~ v13_col_sn_2018$v2elsnlfc_15, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_15 = case_when(
MOV_top2_pct > 0.10 ~ v13_col_sn_2018$v2elsnmrfc_15, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_15 = case_when(
MOV_top2_pct > 0.10 ~ v13_col_sn_2018$v2clrgstch_15, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_15 = case_when(
MOV_top2_pct > 0.10 ~ v13_col_sn_2018$v2clrgwkch_15, TRUE ~ NA_real_))
#Q15: in "areas where support [10% MOV] for the national ruling party is strong" there are ...
RP_15 <- RP_15 %>%
#"less free and fair subnational elections"
mutate(elsnlf_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2elsnlfc_15, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2elsnmrfc_15, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2clrgstch_15, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2clrgwkch_15, TRUE ~ NA_real_))
#Q16: in "areas where support [10% MOV] for the national ruling party is weak" there are ...
RP_15 <- RP_15 %>%
#"less free and fair subnational elections"
mutate(elsnl_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2elsnlfc_16, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2elsnmrfc_16, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2clrgstch_16, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2clrgwkch_16, TRUE ~ NA_real_))
library(dplyr)
# Step 1: Calculate total votes cast at municipal level (allows for percentages later on).
rp18 <- rp18 %>%
group_by(FID) %>%
mutate(votototal = sum(votos)) %>%
mutate(vtpc = votos/votototal) %>% #optional: useful for quick look at percentages, SD, etc.
mutate(vtpc0 = round(vtpc*100, 2))
# Import voting data from Registraduria (RNEC).
library(readr)
rp18 <- read_csv("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/15-16_RulingParty/2018_presidencia_segunda_vuelta_dta_c27d4515ed.csv") # this long dataset contains only 2 candidates because it was a second-round election. other datasets will include more rows depending on the number of candidates running.
#Codigo municipio should have 5 digits
rp18$MPIO_CDPMP <- as.character(rp18$codmpio)
rp18$MPIO_CDPMP <- ifelse(nchar(rp18$MPIO_CDPMP) == 4, sprintf("0%s", rp18$MPIO_CDPMP), rp18$MPIO_CDPMP)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
rp18 <- merge(rp18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
library(dplyr)
# Step 1: Calculate total votes cast at municipal level (allows for percentages later on).
rp18 <- rp18 %>%
group_by(FID) %>%
mutate(votototal = sum(votos)) %>%
mutate(vtpc = votos/votototal) %>% #optional: useful for quick look at percentages, SD, etc.
mutate(vtpc0 = round(vtpc*100, 2))
# For mapping at the municipal level, values may take the form of: percent difference in votes between top winner and runner-up candidate(s). This requires a few steps:
#Step 2: Pivot municipal voting behavior into wide format.
p18d0 <- rp18 %>%
group_by(FID, codigo_lista) %>%
pivot_wider(names_from = codigo_lista, values_from = votos) %>% # Pivot to wide format
rename(Petro = `1`,
Duque = `2`,
nomark = `997`,
null = `998`,
blank = `999`)
## Step 3: Create new dfs for voting behavior at municipal level -- is there a more efficient code?
p18d2 <- p18d0 %>%
select(FID, Petro) %>%
filter(!is.na(Petro))
p18d2 <- p18d2[!duplicated(p18d2$FID), ]
p18d3 <- p18d0 %>%
select(FID, Duque) %>%
filter(!is.na(Duque))
p18d3 <- p18d3[!duplicated(p18d3$FID), ]
p18d4 <- p18d0 %>%
select(FID, nomark) %>%
filter(!is.na(nomark))
p18d4 <- p18d4[!duplicated(p18d4$FID), ]
p18d5 <- p18d0 %>%
select(FID, null) %>%
filter(!is.na(null))
p18d5 <- p18d5[!duplicated(p18d5$FID), ]
p18d6 <- p18d0 %>%
select(FID, blank) %>%
filter(!is.na(blank))
p18d6 <- p18d6[!duplicated(p18d6$FID), ]
p18d7 <- p18d0 %>%
group_by(FID) %>%
summarise(vtotal = first(votototal))
p18d7 <- p18d7[!duplicated(p18d7$FID), ]
RPs <- list(p18d2, p18d3, p18d4, p18d5, p18d6, p18d7)
merged_RP <- Reduce(function(x, y) merge(x, y, by = "FID", all = TRUE), RPs)
df2rm2 = c("rp18", "p18d0", "p18d2", "p18d3", "p18d4", "p18d5", "p18d6", "p18d7", "df2rm2", "RPs")
rm(list = df2rm2)
## Step 3: Create margin of support variable for winner and runner-up candidates. Positive value indicates support for winner; negative indicates opposition. Variable order may vary depending on the election year data from RNEC
RP_15 <- merged_RP %>%
mutate(MOV_top2 = Duque-Petro) %>% #Raw vote-count margin of victory
mutate(Duque_pct = Duque/vtotal) %>%
mutate(Petro_pct = Petro/vtotal) %>%
mutate(MOV_pct = Duque_pct-Petro_pct) #Standardized percent margin of victory
mean(RP_15$MOV_top2_pct) #Duque margin is 26.3% on average (quite high).
sd(RP_15$MOV_top2_pct) #SD for the margin is larger than the mean (39.7%) suggesting abnormal distribution
hist(RP_15$MOV_top2_pct, main = "Histogram of MOV", xlab = "MOV", col = "skyblue", border = "black") #left-tail long (margin for Petro)
#Q15: in "areas where support [10% MOV] for the national ruling party is strong" there are ...
RP_15 <- RP_15 %>%
#"less free and fair subnational elections"
mutate(elsnl_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2elsnlfc_15, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2elsnmrfc_15, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2clrgstch_15, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_15 = case_when(
MOV_pct > 0.10 ~ v13_col_sn_2018$v2clrgwkch_15, TRUE ~ NA_real_))
#Q16: in "areas where support [10% MOV] for the national ruling party is weak" there are ...
RP_15 <- RP_15 %>%
#"less free and fair subnational elections"
mutate(elsnl_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2elsnlfc_16, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2elsnmrfc_16, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2clrgstch_16, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_16 = case_when(
MOV_pct < -0.10 ~ v13_col_sn_2018$v2clrgwkch_16, TRUE ~ NA_real_))
RP_15 <- RP_15[complete.cases(RP_15$FID), ] # remove NA case
# Export the final merge to a .csv file that can be read into ArcMaps
RP18_15 <- RP_15 %>%
select(1:3|7|11:19) %>%
rename(FID_15 = FID) %>%
rename(Petro_15 = Petro) %>%
rename(Duque_15 = Duque) %>%
rename(vtotal_15 = elsnmrfc) %>%
rename(MOV18_15 = clrgstch)
# Export the final merge to a .csv file that can be read into ArcMaps
RP18_15 <- RP_15 %>%
select(1:3|7|11:19) %>%
rename(FID_15 = FID) %>%
rename(Petro_15 = Petro) %>%
rename(Duque_15 = Duque) %>%
rename(vtotal_15 = vtotal) %>%
rename(MOV18_15 = MOV_pct)
# Export data to a csv file that will be joined to map
write.csv(RP18_15, file = "G:/My Drive/git/snvdem24/data/geospatial/2018pmq/15-16_RulingParty/RP18_15-16.csv", row.names = FALSE)
# Export data to a csv file that will be joined to map
write.csv(RP18_15, file = "G:/My Drive/git/snvdem24/data/geospatial/2018pmq/15-16_RulingParty/RP18_15-16a.csv", row.names = FALSE)
# Export the final merge to a .csv file that can be read into ArcMaps
RP18_15 <- RP_15 %>%
select(1:3|7|11:19) %>%
rename(FID_15 = FID) %>%
rename(Petro_15 = Petro) %>%
rename(Duque_15 = Duque) %>%
rename(vtotal_15 = vtotal) %>%
rename(MOV18_15 = MOV_pct) %>%
mutate(MOV18_5 = round(MOV18_5, 5))
# Export the final merge to a .csv file that can be read into ArcMaps
RP18_15 <- RP_15 %>%
select(1:3|7|11:19) %>%
rename(FID_15 = FID) %>%
rename(Petro_15 = Petro) %>%
rename(Duque_15 = Duque) %>%
rename(vtotal_15 = vtotal) %>%
rename(MOV18_15 = MOV_pct) %>%
mutate(MOV18_15 = round(MOV18_15, 5))
# Export data to a csv file that will be joined to map
write.csv(RP18_15, file = "G:/My Drive/git/snvdem24/data/geospatial/2018pmq/15-16_RulingParty/RP18_15-16a.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
setwd("G:/My Drive/git/snvdem24")
# make a clean slate
rm(list = ls())
# load needed packages
library(tidyverse)
library(vdemdata)
# Create a data frame of version 13 dataset:
v13 <- vdem
# this df appears to be the same as MC's "full + others" data set: read_dta("C:/Users/mcoppedg/Dropbox/MC/VDemFiles/Archive/V13/V-Dem-CY-Full+Others/V-Dem-CY-Full+Others-v13.dta")
# Filter to just Colombia since 1899:
v13_col <- filter(v13, country_name=="Colombia" & year > 1899)
# Select just the ID and subnational variables
# (Note: v2elsnless and v2elsnmore are not in this df. We will make sure to
# include them in our request to the data manager.)
v13_col_sn <- v13_col %>%
select(country_id, country_name, country_text_id, historical_date, year,
v2elsnlfc_0:v2elsnlfc_21, v2elsnmrfc_0:v2elsnmrfc_21,
v2clrgstch_0:v2clrgstch_21, v2clrgwkch_0:v2clrgwkch_21)
# Listing the variable names to check our work:
#names(v13_col_sn)
# Export the result to a CSV file:
#write.csv(v13_col_sn, file = "v13_col_sn.csv")
# create subset of V-Dem data for 2018
v13_col_sn_2018 <- subset(v13_col_sn, year == 2018)
v13_col_sn_2018 <- v13_col_sn_2018 %>%
select(-matches("_17$|_18$|_19$|_20$|_21$")) # remove responses not relevant for Colombia
df2rm = c("v13", "v13_col", "v13_col_sn", "df2rm")
rm(list = df2rm)
library(readxl)
MGN18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
# municipal-level data for "value added"
VAM18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anexo-2020-2021-provisional-valor-agregado-municipio-2011-2021.xlsx", sheet = "Cuadro 9", range = "A11:I1133")
# rename columns to facilitate merging with ArcMap data
VAM18 <- VAM18 %>%
rename(MPIO_CDPMP = `Código Municipio`) %>%
rename(DPTO_CCDGO = `Código Departamento`) %>%
rename(VAM18_2 = `Valor agregado\r\n`) %>%
select(1|3|8)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
ED18 <- merge(VAM18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
ED18 <- ED18 %>%
rename(FID_2 = FID)
# department-level data for "PBI per capita"
PBID <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anex-PIBDep-RetropolacionDepartamento-2022pr.xlsx", sheet = "Cuadro 1", range = "A10:AS36")
PBID <- PBID %>%
rename(DPTO_CCDGO = `Código Departamento (DIVIPOLA)`) %>%
select(DPTO_CCDGO, `2018`) %>% #keep only 2018 data
rename(PBID18_2 = `2018`)
ED18md <- merge(ED18, PBID, by = "DPTO_CCDGO", all.x = TRUE)
ED18md <- ED18md %>%
select(3:5)
# Export source data to a .csv file that will be joined to map
#write.csv(ED18md, file = "G:/My Drive/git/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/ED18_2.csv", row.names = FALSE)
ED18_2_3 <- ED18md %>%
#"less free and fair subnational elections"
mutate(elsnl_2m  = case_when( #Reduced the variable names to less than 10 characters in order to avoid merging issues in ArcMap
VAM18_2 < 138 ~ v13_col_sn_2018$v2elsnlfc_2, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_2m  = case_when(
VAM18_2 < 138 ~ v13_col_sn_2018$v2elsnmrfc_2, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_2m  = case_when(
VAM18_2 < 138 ~ v13_col_sn_2018$v2clrgstch_2, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_2m  = case_when(
VAM18_2 < 138 ~ v13_col_sn_2018$v2clrgwkch_2, TRUE ~ NA_real_)) %>%
## at the departmental level
#"less free and fair subnational elections"
mutate(elsnl_2d = case_when(
PBID18_2 < 26884 ~ v13_col_sn_2018$v2elsnlfc_2, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_2d = case_when(
PBID18_2 < 26884 ~ v13_col_sn_2018$v2elsnmrfc_2, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_2d = case_when(
PBID18_2 < 26884 ~ v13_col_sn_2018$v2clrgstch_2, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_2d = case_when(
PBID18_2 < 26884 ~ v13_col_sn_2018$v2clrgwkch_2, TRUE ~ NA_real_))
#Q3: in "areas that are more economically developed" there are ...
## at the municipal level...
ED18_2_3 <- ED18_2_3 %>%
#"less free and fair subnational elections"
mutate(elsnl_3m  = case_when(
VAM18_2 > 138 ~ v13_col_sn_2018$v2elsnlfc_3, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_3m  = case_when(
VAM18_2 > 138 ~ v13_col_sn_2018$v2elsnmrfc_3, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_3m  = case_when(
VAM18_2 > 138 ~ v13_col_sn_2018$v2clrgstch_3, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_3m  = case_when(
VAM18_2 > 138 ~ v13_col_sn_2018$v2clrgwkch_3, TRUE ~ NA_real_)) %>%
## at the departmental level
#"less free and fair subnational elections"
mutate(elsnl_3d = case_when(
PBID18_2 > 26884 ~ v13_col_sn_2018$v2elsnlfc_3, TRUE ~ NA_real_)) %>%
#"more free and fair subnational elections"
mutate(elsnmr_3d = case_when(
PBID18_2 > 26884 ~ v13_col_sn_2018$v2elsnmrfc_3, TRUE ~ NA_real_)) %>%
#"stronger civil liberties"
mutate(clrgst_3d = case_when(
PBID18_2 > 26884 ~ v13_col_sn_2018$v2clrgstch_3, TRUE ~ NA_real_)) %>%
#"weaker civil liberties"
mutate(clrgwk_3d = case_when(
PBID18_2 > 26884 ~ v13_col_sn_2018$v2clrgwkch_3, TRUE ~ NA_real_))
ED18_2_3c <- ED18_2_3 %>%
mutate_all(~ifelse(. == "NA", "", .))
View(ED18_2_3c)
View(ED18_2_3)
View(ED18_2_3c)
ED18_2_3c <- ED18_2_3 %>%
mutate_all(~ifelse(. == "NA", ".", .)) %>%
mutate_all(~as.numeric(as.character(.)))
View(ED18_2_3c)
write.csv(ED18_2_3c, file = "G:/My Drive/git/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/ED18_2-3c.csv", row.names = FALSE)
ED18_2_3c <- ED18_2_3 %>%
mutate_all(~ifelse(. == "NA", "<Null>", .))
View(ED18_2_3c)
ED18_2_3c <- ED18_2_3 %>%
mutate_all(~ifelse(. == "", "<Null>", .))
View(ED18_2_3c)
install.packages("remotes")
remotes::install_github(
"r-arcgis/arcgis",
dependencies = TRUE
)
installed.packages()
libs <- c(
"arcgis",
"tidyverse",
"sf",
"terra",
"classInt",
"rayshader"
)
installed_libs <- libs %in% rownames(
installed_libs <- libs %in% rownames(
installed.packages()
)
installed_libs <- libs %in% rownames(
installed.packages()
)
if(any(installed_libs == F)){
install.packages(
libs[!installed_libs],
dependencies = TRUE
)
}
invisible(
lapply(
libs, library,
character.only = TRUE
)
)
col <- st_read(system.file("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf"))
col <- st_read(system.file("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf"))
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf")
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/", package = "sf")
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp.xml", package = "sf")
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf")
getwd()
# libraries we need
libs <- c(
"tidyverse", "geodata",
"sf", "ggmap", "maps",
"ggrepel"
)
installed_libs <- libs %in% rownames(
installed.packages()
)
if (any(installed_libs == F)) {
install.packages(
libs[!installed_libs]
)
}
invisible(lapply(
libs, library,
character.only = T
))
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf")
col <- sf::st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf")
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf")
col <- st_read("MGN_ANM_MPIOS.shp", package = "sf")
col <- st_read("BaseLayer/MGN_ANM_MPIOS.shp", package = "sf")
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp", package = "sf")
st_layers("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
# st_layers("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
plot(st_geometry(col))
# load libraries
invisible(lapply(
libs, library,
character.only = T
))
# libraries we need
libs <- c(
"tidyverse", "geodata",
"sf", "ggmap", "maps",
"ggrepel"
)
# load libraries
invisible(lapply(
libs, library,
character.only = T
))
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
knitr::opts_chunk$set(echo = TRUE)
setwd("G:/My Drive/git/snvdem24")
# make a clean slate
rm(list = ls())
# load needed packages
library(tidyverse)
library(vdemdata)
# Create a data frame of version 13 dataset:
v13 <- vdem
# this df appears to be the same as MC's "full + others" data set: read_dta("C:/Users/mcoppedg/Dropbox/MC/VDemFiles/Archive/V13/V-Dem-CY-Full+Others/V-Dem-CY-Full+Others-v13.dta")
# Filter to just Colombia since 1899:
v13_col <- filter(v13, country_name=="Colombia" & year > 1899)
# Select just the ID and subnational variables
# (Note: v2elsnless and v2elsnmore are not in this df. We will make sure to
# include them in our request to the data manager.)
v13_col_sn <- v13_col %>%
select(country_id, country_name, country_text_id, historical_date, year,
v2elsnlfc_0:v2elsnlfc_21, v2elsnmrfc_0:v2elsnmrfc_21,
v2clrgstch_0:v2clrgstch_21, v2clrgwkch_0:v2clrgwkch_21)
# Listing the variable names to check our work:
#names(v13_col_sn)
# Export the result to a CSV file:
#write.csv(v13_col_sn, file = "v13_col_sn.csv")
# create subset of V-Dem data for 2018
v13_col_sn_2018 <- subset(v13_col_sn, year == 2018)
v13_col_sn_2018 <- v13_col_sn_2018 %>%
select(-matches("_17$|_18$|_19$|_20$|_21$")) # remove responses not relevant for Colombia
df2rm = c("v13", "v13_col", "v13_col_sn", "df2rm")
rm(list = df2rm)
library(readxl)
MGN18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
col <- st_read("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
# st_layers("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
plot(st_geometry(col$STVIVIENDA))
# st_layers("G:/My Drive/git/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
plot(st_geometry(col))
library(readxl)
MGN18 <- read_excel("G:/My Drive/git/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
