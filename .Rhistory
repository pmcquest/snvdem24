# "weaker civil liberties"
IR18 <- IR18 %>%
mutate(cw_d0 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgwkch_0,
TRUE ~ NA_real_)) %>%
mutate(cw_d1 = case_when(
indrural < 0.50 ~ v13_col_sn_2018$v2clrgwkch_1,
TRUE ~ NA_real_))
# For sf (R), merge this data to shapefile
col <- merge(col, IR18, by = "MPIO_CDPMP", all.x = TRUE)
min(IR18$el_c0)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
setwd("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq")
library(flextable)
library(dplyr)
library(officer)
library(kableExtra)
#set_flextable_defaults(fontname = "Computer Modern", fontsize = 10)
vdem_op <- data.frame(
ID = seq(0, 16, 1), stringsAsFactors = FALSE,
Response = c("Rural", "Urban",
"Less econ devt", "More econ devt",
"Inside capital", "Outside capital",
"North", "South", "West", "East",
"Civil unrest", "Illicit activity",
"Sparse pop.", "Remote",
"Indigenous",
"Ruling party strong", "Ruling party weak"),
Indicator = c("Rural Index (DANE)", "Rural Index (DANE)",
"Mun. Value Added / Dept. GDP (DNP)", "Mun. Value Added / Dept. GDP (DNP)",
"Geographic distance from center (DANE)", "Geographic distance from center (DANE)",
"Six macro-regions (DANE)", "Six macro-regions (DANE)", "Six macro-regions (DANE)", "Six macro-regions (DANE)",
"Illegally armed groups (Min. Defense)", "Coca cultivation (Min. Defense/UNODC)",
"Population density (DANE)", "Access (Min. Transportation/Health)",
"Ethnic population (DANE)",
"Pres. margin of victory (RNEC)", "Pres. margin of victory (RNEC)"))
#mf <- flextable(vdem_op) %>%
#  fontsize(size = 11) %>%
#  font(part = "all", fontname = "Arial") %>%
#  set_flextable_properties(padding = 0.1)
#mf <- theme_vanilla(mf)
#mfn <- set_caption(mf,
#  caption = "Operationalization of V-Dem responses in Colombia",
#  style = "Table Caption",
#  autonum = run_autonum(seq_id = "tab", bkm = "tab1"))
#mfnm <- merge_v(mfn, j = ~ Indicator)
#autofit(mfnm)
#kable(vdem_op, caption = "Operationalization of V-Dem responses in Colombia")
# Print dataframe with merged cells
vdem_op %>%
kable("latex", escape = FALSE, caption = "Operationalization of V-Dem responses in Colombia") %>%
kable_styling(full_width = FALSE) %>%
collapse_rows(columns = 3, valign = "middle") %>%
row_spec(0, bold = TRUE)
# make a clean slate
rm(list = ls())
# load needed packages
library(tidyverse)
library(vdemdata)
# Create a data frame of version 13 dataset:
v13 <- vdem
# this df appears to be the same as MC's "full + others" data set: read_dta("C:/Users/mcoppedg/Dropbox/MC/VDemFiles/Archive/V13/V-Dem-CY-Full+Others/V-Dem-CY-Full+Others-v13.dta")
# Filter to just Colombia since 1899:
v13_col <- filter(v13, country_name=="Colombia" & year > 1899)
# Select just the ID and subnational variables
# (Note: v2elsnless and v2elsnmore are not in this df. We will make sure to
# include them in our request to the data manager.)
v13_col_sn <- v13_col %>%
select(country_id, country_name, country_text_id, historical_date, year,
v2elsnlfc_0:v2elsnlfc_21, v2elsnmrfc_0:v2elsnmrfc_21,
v2clrgstch_0:v2clrgstch_21, v2clrgwkch_0:v2clrgwkch_21)
# Listing the variable names to check our work:
#names(v13_col_sn)
# Export the result to a CSV file:
#write.csv(v13_col_sn, file = "v13_col_sn.csv")
# create subset of V-Dem data for 2018
v13_col_sn_2018 <- subset(v13_col_sn, year == 2018)
v13_col_sn_2018 <- v13_col_sn_2018 %>%
select(-matches("_17$|_18$|_19$|_20$|_21$")) # remove responses not relevant for Colombia
df2rm = c("v13", "v13_col", "v13_col_sn", "df2rm")
rm(list = df2rm)
# Load necessary libraries
library(dplyr)
library(tidyr)
library(knitr)
library(purrr)
library(kableExtra)
library(insight)
selected_vars <- grep("v2elsnlfc|v2elsnmrfc|v2clrgstch|v2clrgwkch", colnames(v13_col_sn_2018), value = TRUE)
selected_df <- v13_col_sn_2018 %>%
select(all_of(selected_vars))
summary_df <- selected_df %>%
pivot_longer(cols = everything()) %>%
mutate(row_id = gsub(".*_(\\d+)$", "\\1", name)) %>%
mutate(column_id = gsub(".*(v2elsnlfc|v2elsnmrfc|v2clrgstch|v2clrgwkch).*", "\\1", name)) %>%
pivot_wider(names_from = column_id, values_from = value) %>%
select(-name) %>%
mutate(row_id = as.numeric(row_id)) %>%
group_by(row_id) %>%
summarise(across(everything(), ~ifelse(all(is.na(.)), NA, first(na.omit(.))))) %>%
ungroup()
new_col_names <- c("Elections less free", "Elections more free", "Civil liberties stronger", "Civil liberties weaker")
new_row_names <- c(
"Rural", "Urban", "Less econ devt", "More econ devt", "Inside capital",
"Outside capital", "North", "South", "West", "East", "Civil unrest",
"Illicit activity", "Sparse pop.", "Remote", "Indigenous",
"Ruling party strong", "Ruling party weak"
)
# Rename columns and modify row_id variable
summary_table <- summary_df %>%
mutate(row_id = new_row_names[as.numeric(row_id) + 1]) %>%
rename(
`Survey variable` = row_id,
`Elec. less free` = v2elsnlfc,
`Elec. more free` = v2elsnmrfc,
`Civil lib. stronger` = v2clrgstch,
`Civil lib. weaker` = v2clrgwkch
)
summary_table %>%
kable(format = "latex", booktabs = TRUE, caption = "V-Dem response scores for Colombia in 2018") %>%
kable_styling(full_width = FALSE) %>%
row_spec(0, bold = TRUE)
library(sf)
col <- st_read("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
col <- col %>%
select(1:8)
library(readxl)
MGN18 <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
# we merge the FID variable to our main shapefile
col <- merge(col, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
# municipal-level data for distance to capital city
IR18 <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/0-1_Rurality/PANEL_CARACTERISTICAS_GENERALES(2021).xlsx")
colnames(IR18)[3] = "MPIO_CDPMP"
colnames(IR18)[7] = "Year"
IR18 <- IR18 %>%
filter(Year == 2018)
# this data set also contains important descriptive information (department, province) that we will hang onto
IR18 <- IR18[c("MPIO_CDPMP", "depto", "provincia", "indrural")]
# Because the import creates a numeric field for DANE code, we must convert this numeric variable to character and then assure each observation has the corresponding 5 digits
IR18$MPIO_CDPMP <- as.character(IR18$MPIO_CDPMP)
# Add a 0 before values with 4 digits only
IR18$MPIO_CDPMP <- ifelse(nchar(IR18$MPIO_CDPMP) == 4, paste0("0", IR18$MPIO_CDPMP), IR18$MPIO_CDPMP)
# Option #1: interact V-Dem with rural index score
IR18$CDF_0t1 <- pnorm(IR18$indrural)
# 0: proportion who selected Rural
IR18 <- IR18 %>%
mutate(el_c0 = CDF_0t1*v13_col_sn_2018$v2elsnlfc_0) %>%
mutate(em_c0 = CDF_0t1*v13_col_sn_2018$v2elsnmrfc_0) %>%
mutate(cs_c0 = CDF_0t1*v13_col_sn_2018$v2clrgstch_0) %>%
mutate(cw_c0 = CDF_0t1*v13_col_sn_2018$v2clrgwkch_0)
# 1: proportion who selected Urban
IR18 <- IR18 %>%
mutate(el_c1 = CDF_0t1*v13_col_sn_2018$v2elsnlfc_1) %>%
mutate(em_c1 = CDF_0t1*v13_col_sn_2018$v2elsnmrfc_1) %>%
mutate(cs_c1 = CDF_0t1*v13_col_sn_2018$v2clrgstch_1) %>%
mutate(cw_c1 = CDF_0t1*v13_col_sn_2018$v2clrgwkch_1)
# Option #2: categorize based on threshold, and assign the corresponding V-Dem score
# "less free and fair subnational elections"
IR18 <- IR18 %>%
mutate(el_d0 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnlfc_0, # Rural areas
TRUE ~ NA_real_)) %>%
mutate(el_d1 = case_when(
indrural < 0.50 ~ v13_col_sn_2018$v2elsnlfc_1, # Urban areas
TRUE ~ NA_real_))
# "more free and fair subnational elections"
IR18 <- IR18 %>%
mutate(em_d0 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2elsnmrfc_0,
TRUE ~ NA_real_)) %>%
mutate(em_d1 = case_when(
indrural < 0.50 ~ v13_col_sn_2018$v2elsnmrfc_1,
TRUE ~ NA_real_))
# "stronger civil liberties"
IR18 <- IR18 %>%
mutate(cs_d0 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgstch_0,
TRUE ~ NA_real_)) %>%
mutate(cs_d1 = case_when(
indrural < 0.50 ~ v13_col_sn_2018$v2clrgstch_1,
TRUE ~ NA_real_))
# "weaker civil liberties"
IR18 <- IR18 %>%
mutate(cw_d0 = case_when(
indrural > 0.50 ~ v13_col_sn_2018$v2clrgwkch_0,
TRUE ~ NA_real_)) %>%
mutate(cw_d1 = case_when(
indrural < 0.50 ~ v13_col_sn_2018$v2clrgwkch_1,
TRUE ~ NA_real_))
# For sf (R), merge this data to shapefile
col <- merge(col, IR18, by = "MPIO_CDPMP", all.x = TRUE)
library(ggplot2)
library(gridExtra)
d0 <- ggplot() +
geom_sf(data = col, aes(fill = el_d0)) + # check results
labs(title = "Threshold approach", caption = "Less free and fair elections: Rural areas") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (prop.)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
c0 <- ggplot() +
geom_sf(data = col, aes(fill = el_c0)) + # check results
labs(title = "CDF approach", caption = "Less free and fair elections: Rural areas") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (pnorm)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
# Arrange the plots side by side
arranged_plots <- grid.arrange(d0, c0, ncol = 2)
suppressMessages(arranged_plots)
# merge base-layer dataset to obtain FID variable
IR18 <- merge(IR18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
IR18 <- IR18 %>%
rename(indrur0t1 = indrural) %>%
rename(FID_0t1 = FID)
# For ArcMaps, export the final merge to a .csv file
write.csv(IR18, file = "G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/0-1_Rurality/IR18_0-1.csv", row.names = FALSE)
#clean things up for next variable
df2rm = c("IR18", "df2rm", "arranged_plots", "c0", "d0")
rm(list = df2rm)
# municipal-level data for "value added"
VAM18 <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anexo-2020-2021-provisional-valor-agregado-municipio-2011-2021.xlsx", sheet = "Cuadro 9", range = "A11:I1133")
# rename columns to facilitate merging shapefile
VAM18 <- VAM18 %>%
rename(MPIO_CDPMP = `Código Municipio`) %>%
rename(DPTO_CCDGO = `Código Departamento`) %>%
rename(VAM18_2t3 = `Valor agregado\r\n`) %>%
select(1|3|8)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
ED18 <- merge(VAM18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
ED18 <- ED18 %>%
rename(FID_2t3 = FID)
# department-level data for "PBI per capita"
PBID <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anex-PIBDep-RetropolacionDepartamento-2022pr.xlsx", sheet = "Cuadro 1", range = "A10:AS36")
PBID <- PBID %>%
rename(DPTO_CCDGO = `Código Departamento (DIVIPOLA)`) %>%
select(DPTO_CCDGO, `2018`) %>% #keep only 2018 data
rename(PBID18_2t3 = `2018`)
ED18 <- merge(ED18, PBID, by = "DPTO_CCDGO", all.x = TRUE)
ED18 <- ED18 %>%
mutate(PBIDp = PBID18_2t3 / (sum(unique(na.omit(ED18$PBID18_2t3))))) %>%
mutate(VAMp = VAM18_2t3 / (sum(unique(na.omit(ED18$VAM18_2t3)))))
View(ED18)
View(col)
ED18$CDF_2t3d <- pnorm(ED18$PBIDp) # department-level
View(ED18)
ED18$CDF_2t3m <- pnorm(ED18$VAMp) # municipal-level
hist(ED18$PBID18_2t3)
hist(ED18$VAM18_2t3)
ED18s <- subset(ED18, MPIO_CDPMP != 11001) # removing Bogota...
hist(ED18s$PBID18_2t3)
hist(ED18s$VAM18_2t3)
hist(ED18s$VAM18_2t3) # completely skewed by few cases with much higher values
ecdf <- ecdf(ED18s$PBID18_2t3)
ED18$ecdf <- ecdf(ED18s$PBID18_2t3)
ED18$ecdf <- ecdf(ED18$PBID18_2t3)
View(ED18)
rm(ED18)
rm(ED18s)
# municipal-level data for "value added"
VAM18 <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anexo-2020-2021-provisional-valor-agregado-municipio-2011-2021.xlsx", sheet = "Cuadro 9", range = "A11:I1133")
# rename columns to facilitate merging shapefile
VAM18 <- VAM18 %>%
rename(MPIO_CDPMP = `Código Municipio`) %>%
rename(DPTO_CCDGO = `Código Departamento`) %>%
rename(VAM18_2t3 = `Valor agregado\r\n`) %>%
select(1|3|8)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
ED18 <- merge(VAM18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
ED18 <- ED18 %>%
rename(FID_2t3 = FID)
# department-level data for "PBI per capita"
PBID <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anex-PIBDep-RetropolacionDepartamento-2022pr.xlsx", sheet = "Cuadro 1", range = "A10:AS36")
PBID <- PBID %>%
rename(DPTO_CCDGO = `Código Departamento (DIVIPOLA)`) %>%
select(DPTO_CCDGO, `2018`) %>% #keep only 2018 data
rename(PBID18_2t3 = `2018`)
ED18 <- merge(ED18, PBID, by = "DPTO_CCDGO", all.x = TRUE)
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments
ED18$eCDF_2t3m <- ecdf(ED18$VAM18_2t3) # municipalities
View(ED18)
# Option #1: interact V-Dem with ECDF variables
# Department-level data
# 2: proportion who selected less economically developed
ED18 <- ED18 %>%
mutate(el_c2 = eCDF_2t3d*v13_col_sn_2018$v2elsnlfc_2) %>%
mutate(em_c2 = eCDF_2t3d*v13_col_sn_2018$v2elsnmrfc_2) %>%
mutate(cs_c2 = eCDF_2t3d*v13_col_sn_2018$v2clrgstch_2) %>%
mutate(cw_c2 = eCDF_2t3d*v13_col_sn_2018$v2clrgwkch_2)
# 3: proportion who selected more economically developed
ED18 <- ED18 %>%
mutate(el_c3 = eCDF_2t3d*v13_col_sn_2018$v2elsnlfc_2) %>%
mutate(em_c3 = eCDF_2t3d*v13_col_sn_2018$v2elsnmrfc_2) %>%
mutate(cs_c3 = eCDF_2t3d*v13_col_sn_2018$v2clrgstch_2) %>%
mutate(cw_c3 = eCDF_2t3d*v13_col_sn_2018$v2clrgwkch_2)
# For sf (R), merge this data to shapefile
col <- merge(col, ED18, by = "MPIO_CDPMP", all.x = TRUE)
c2 <- ggplot() +
geom_sf(data = col, aes(fill = em_c2)) + # check results
labs(title = "Less developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
c3 <- ggplot() +
geom_sf(data = col, aes(fill = em_c3)) + # check results
labs(title = "More developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
# Arrange the plots side by side
arranged_plots2 <- grid.arrange(c2, c3, ncol = 2)
suppressMessages(arranged_plots2)
hist(ED18$PBID18_2t3) #right-skewed, major outlier is Bogota (25% of Colombian GDP and VAM), so the data could be logged
hist(ED18$VAM18_2t3) # heavily skewed by few cases with much higher values
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments are ok
ED18$eCDF_2t3m <- ecdf(ED18$VAM18_2t3) # municipalities... but with many 0s. this may require more sophisticated "cluster" analysis or something?
# Option #1: interact V-Dem with ECDF variables at department level
# Department-level data
# 2: proportion who selected less economically developed
ED18 <- ED18 %>%
mutate(el_c2 = eCDF_2t3d*v13_col_sn_2018$v2elsnlfc_2) %>%
mutate(em_c2 = eCDF_2t3d*v13_col_sn_2018$v2elsnmrfc_2) %>%
mutate(cs_c2 = eCDF_2t3d*v13_col_sn_2018$v2clrgstch_2) %>%
mutate(cw_c2 = eCDF_2t3d*v13_col_sn_2018$v2clrgwkch_2)
# 3: proportion who selected more economically developed
ED18 <- ED18 %>%
mutate(el_c3 = eCDF_2t3d*v13_col_sn_2018$v2elsnlfc_3) %>%
mutate(em_c3 = eCDF_2t3d*v13_col_sn_2018$v2elsnmrfc_3) %>%
mutate(cs_c3 = eCDF_2t3d*v13_col_sn_2018$v2clrgstch_3) %>%
mutate(cw_c3 = eCDF_2t3d*v13_col_sn_2018$v2clrgwkch_3)
# For sf (R), merge this data to shapefile
col <- merge(col, ED18, by = "MPIO_CDPMP", all.x = TRUE)
c2 <- ggplot() +
geom_sf(data = col, aes(fill = em_c2)) + # check results
labs(title = "Less developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
c3 <- ggplot() +
geom_sf(data = col, aes(fill = em_c3)) + # check results
labs(title = "More developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
# Arrange the plots side by side
arranged_plots2 <- grid.arrange(c2, c3, ncol = 2)
c2 <- ggplot() +
geom_sf(data = col, aes(fill = em_c2)) + # check results
labs(title = "Less developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
c3 <- ggplot() +
geom_sf(data = col, aes(fill = em_c3)) + # check results
labs(title = "More developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
# Arrange the plots side by side
arranged_plots2 <- grid.arrange(c2, c3, ncol = 2)
rm(c2)
rm(c3)
rm(arranged_plots2)
c2 <- ggplot() +
geom_sf(data = col, aes(fill = em_c2)) + # check results
labs(title = "Less developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
c3 <- ggplot() +
geom_sf(data = col, aes(fill = em_c3)) + # check results
labs(title = "More developed areas (departments)", caption = "More free and fair elections") +
scale_fill_continuous(guide = guide_colorbar(
title = "V-Dem (ecdf)",
title.position = "top",  # Change title position
label.position = "right"),
low = "lightblue",
high = "darkblue") + # Change label position
theme(legend.title = element_text(size = 6)) +
theme_void()
# Arrange the plots side by side
arranged_plots2 <- grid.arrange(c2, c3, ncol = 2)
rm(col)
# make a clean slate
rm(list = ls())
# load needed packages
library(tidyverse)
library(vdemdata)
# Create a data frame of version 13 dataset:
v13 <- vdem
# this df appears to be the same as MC's "full + others" data set: read_dta("C:/Users/mcoppedg/Dropbox/MC/VDemFiles/Archive/V13/V-Dem-CY-Full+Others/V-Dem-CY-Full+Others-v13.dta")
# Filter to just Colombia since 1899:
v13_col <- filter(v13, country_name=="Colombia" & year > 1899)
# Select just the ID and subnational variables
# (Note: v2elsnless and v2elsnmore are not in this df. We will make sure to
# include them in our request to the data manager.)
v13_col_sn <- v13_col %>%
select(country_id, country_name, country_text_id, historical_date, year,
v2elsnlfc_0:v2elsnlfc_21, v2elsnmrfc_0:v2elsnmrfc_21,
v2clrgstch_0:v2clrgstch_21, v2clrgwkch_0:v2clrgwkch_21)
# Listing the variable names to check our work:
#names(v13_col_sn)
# Export the result to a CSV file:
#write.csv(v13_col_sn, file = "v13_col_sn.csv")
# create subset of V-Dem data for 2018
v13_col_sn_2018 <- subset(v13_col_sn, year == 2018)
v13_col_sn_2018 <- v13_col_sn_2018 %>%
select(-matches("_17$|_18$|_19$|_20$|_21$")) # remove responses not relevant for Colombia
df2rm = c("v13", "v13_col", "v13_col_sn", "df2rm")
rm(list = df2rm)
library(sf)
col <- st_read("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/BaseLayer/MGN_ANM_MPIOS.shp")
col <- col %>%
select(1:8)
library(readxl)
MGN18 <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/MGN_ANM_MPIOS/MGN18.xls")
# We select only relevant variables for merging purposes.
# colnames(MGN18)
MGN18 <- MGN18 %>%
select(1:7)
# we merge the FID variable to our main shapefile
col <- merge(col, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
# municipal-level data for "value added"
VAM18 <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anexo-2020-2021-provisional-valor-agregado-municipio-2011-2021.xlsx", sheet = "Cuadro 9", range = "A11:I1133")
# rename columns to facilitate merging shapefile
VAM18 <- VAM18 %>%
rename(MPIO_CDPMP = `Código Municipio`) %>%
rename(DPTO_CCDGO = `Código Departamento`) %>%
rename(VAM18_2t3 = `Valor agregado\r\n`) %>%
select(1|3|8)
# merge base-layer dataset to obtain FID variable (for later integration with ArcMaps)
ED18 <- merge(VAM18, MGN18[, c("MPIO_CDPMP", "FID")], by = "MPIO_CDPMP", all.x = TRUE)
ED18 <- ED18 %>%
rename(FID_2t3 = FID)
# department-level data for "PBI per capita"
PBID <- read_excel("G:/Shared drives/snvdem/snvdem24/data/geospatial/2018pmq/2-3_EconDevt/anex-PIBDep-RetropolacionDepartamento-2022pr.xlsx", sheet = "Cuadro 1", range = "A10:AS36")
PBID <- PBID %>%
rename(DPTO_CCDGO = `Código Departamento (DIVIPOLA)`) %>%
select(DPTO_CCDGO, `2018`) %>% #keep only 2018 data
rename(PBID18_2t3 = `2018`)
ED18 <- merge(ED18, PBID, by = "DPTO_CCDGO", all.x = TRUE)
hist(ED18$PBID18_2t3) #right-skewed, major outlier is Bogota (25% of Colombian GDP and VAM), so the data could be logged
hist(ED18$VAM18_2t3) # heavily skewed by few cases with much higher values
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments are ok
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments are ok
ecdf(ED18$PBID18_2t3)
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments are ok
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments are ok
View(ED18)
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3, na.rm = TRUE) # departments are ok
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3[!is.na(ED18$PBID18_2t3)]) # departments are ok
ecdf(ED18$PBID18_2t3)
# Because the data is not normally distributed, we use the Empitical CDF
eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments are ok
plot(eCDF_2t3d())
# Because the data is not normally distributed, we use the Empitical CDF
ED18$eCDF_2t3d <- ecdf(ED18$PBID18_2t3) # departments are ok
